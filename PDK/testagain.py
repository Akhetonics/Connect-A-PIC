import nazca as nd
from TestPDK import TestPDK

CAPICPDK = TestPDK()

def FullDesign(layoutName):
    with nd.Cell(name=layoutName) as fullLayoutInner:

        grating1 = CAPICPDK.placeGratingArray_East(8).put(0, 0)
        grating2 = CAPICPDK.placeGratingArray_West(8).put(CAPICPDK._CellSize * 24, 0)
        cell_0_2 = CAPICPDK.placeCell_Crossing().put('west', grating1.pin['eio0'])
        cell_0_3 = CAPICPDK.placeCell_Crossing().put('north', cell_0_2.pin['south'])
        cell_0_4 = CAPICPDK.placeCell_Crossing().put('north', cell_0_3.pin['south'])
        cell_0_5 = CAPICPDK.placeCell_Crossing().put('north', cell_0_4.pin['south'])
        cell_0_6 = CAPICPDK.placeCell_Crossing().put('north', cell_0_5.pin['south'])
        cell_0_7 = CAPICPDK.placeCell_Crossing().put('north', cell_0_6.pin['south'])
        cell_0_8 = CAPICPDK.placeCell_Crossing().put('north', cell_0_7.pin['south'])
        cell_0_9 = CAPICPDK.placeCell_Crossing().put('north', cell_0_8.pin['south'])
        cell_1_5 = CAPICPDK.placeCell_Crossing().put('west', cell_0_5.pin['east'])
        cell_2_5 = CAPICPDK.placeCell_Crossing().put('west', cell_1_5.pin['east'])
        cell_2_4 = CAPICPDK.placeCell_Crossing().put('south', cell_2_5.pin['north'])
        cell_2_3 = CAPICPDK.placeCell_Crossing().put('south', cell_2_4.pin['north'])
        cell_1_3 = CAPICPDK.placeCell_Crossing().put('east', cell_2_3.pin['west'])
        cell_3_3 = CAPICPDK.placeCell_Crossing().put('west', cell_2_3.pin['east'])
        cell_3_4 = CAPICPDK.placeCell_Crossing().put('north', cell_3_3.pin['south'])
        cell_3_5 = CAPICPDK.placeCell_Crossing().put('north', cell_3_4.pin['south'])
        cell_4_4 = CAPICPDK.placeCell_Crossing().put('west', cell_3_4.pin['east'])
        cell_4_3 = CAPICPDK.placeCell_Crossing().put('south', cell_4_4.pin['north'])
        cell_4_2 = CAPICPDK.placeCell_Crossing().put('south', cell_4_3.pin['north'])
        cell_5_2 = CAPICPDK.placeCell_Crossing().put('west', cell_4_2.pin['east'])
        cell_5_3 = CAPICPDK.placeCell_Crossing().put('north', cell_5_2.pin['south'])
        cell_6_3 = CAPICPDK.placeCell_Crossing().put('west', cell_5_3.pin['east'])
        cell_6_2 = CAPICPDK.placeCell_Crossing().put('south', cell_6_3.pin['north'])
        cell_7_2 = CAPICPDK.placeCell_Crossing().put('west', cell_6_2.pin['east'])
        cell_7_3 = CAPICPDK.placeCell_Crossing().put('north', cell_7_2.pin['south'])
        cell_8_3 = CAPICPDK.placeCell_Crossing().put('west', cell_7_3.pin['east'])
        cell_8_2 = CAPICPDK.placeCell_Crossing().put('south', cell_8_3.pin['north'])
        cell_9_3 = CAPICPDK.placeCell_Crossing().put('west', cell_8_3.pin['east'])
        cell_10_3 = CAPICPDK.placeCell_Crossing().put('west', cell_9_3.pin['east'])
        cell_11_3 = CAPICPDK.placeCell_Crossing().put('west', cell_10_3.pin['east'])
        cell_12_3 = CAPICPDK.placeCell_Crossing().put('west', cell_11_3.pin['east'])
        cell_13_3 = CAPICPDK.placeCell_Crossing().put('west', cell_12_3.pin['east'])
        cell_14_3 = CAPICPDK.placeCell_Crossing().put('west', cell_13_3.pin['east'])
        cell_15_3 = CAPICPDK.placeCell_Crossing().put('west', cell_14_3.pin['east'])
        cell_16_3 = CAPICPDK.placeCell_Crossing().put('west', cell_15_3.pin['east'])
        cell_17_3 = CAPICPDK.placeCell_Crossing().put('west', cell_16_3.pin['east'])
        cell_18_3 = CAPICPDK.placeCell_Crossing().put('west', cell_17_3.pin['east'])
        cell_19_3 = CAPICPDK.placeCell_Crossing().put('west', cell_18_3.pin['east'])
        cell_20_3 = CAPICPDK.placeCell_Crossing().put('west', cell_19_3.pin['east'])
        cell_20_4 = CAPICPDK.placeCell_Crossing().put('north', cell_20_3.pin['south'])
        cell_20_5 = CAPICPDK.placeCell_Crossing().put('north', cell_20_4.pin['south'])
        cell_20_6 = CAPICPDK.placeCell_Crossing().put('north', cell_20_5.pin['south'])
        cell_21_6 = CAPICPDK.placeCell_Crossing().put('west', cell_20_6.pin['east'])
        cell_21_7 = CAPICPDK.placeCell_Crossing().put('north', cell_21_6.pin['south'])
        cell_21_8 = CAPICPDK.placeCell_Crossing().put('north', cell_21_7.pin['south'])
        cell_21_9 = CAPICPDK.placeCell_Crossing().put('north', cell_21_8.pin['south'])
        cell_21_10 = CAPICPDK.placeCell_Crossing().put('north', cell_21_9.pin['south'])
        cell_21_11 = CAPICPDK.placeCell_Crossing().put('north', cell_21_10.pin['south'])
        cell_22_11 = CAPICPDK.placeCell_Crossing().put('west', cell_21_11.pin['east'])
        cell_22_8 = CAPICPDK.placeCell_Crossing().put('west', cell_21_8.pin['east'])
        cell_23_8 = CAPICPDK.placeCell_Crossing().put('west', cell_22_8.pin['east'])
        cell_23_7 = CAPICPDK.placeCell_Crossing().put('south', cell_23_8.pin['north'])
        cell_23_6 = CAPICPDK.placeCell_Crossing().put('south', cell_23_7.pin['north'])
        cell_22_6 = CAPICPDK.placeCell_Crossing().put('east', cell_23_6.pin['west'])
        cell_22_5 = CAPICPDK.placeCell_Crossing().put('south', cell_22_6.pin['north'])
        cell_22_4 = CAPICPDK.placeCell_Crossing().put('south', cell_22_5.pin['north'])
        cell_21_4 = CAPICPDK.placeCell_Crossing().put('east', cell_22_4.pin['west'])
        cell_21_3 = CAPICPDK.placeCell_Crossing().put('south', cell_21_4.pin['north'])
        cell_21_2 = CAPICPDK.placeCell_Crossing().put('south', cell_21_3.pin['north'])
        cell_22_3 = CAPICPDK.placeCell_Crossing().put('west', cell_21_3.pin['east'])
        cell_23_3 = CAPICPDK.placeCell_Crossing().put('west', cell_22_3.pin['east'])
        cell_23_2 = CAPICPDK.placeCell_Crossing().put('south', cell_23_3.pin['north'])
        cell_23_4 = CAPICPDK.placeCell_Crossing().put('north', cell_23_3.pin['south'])
        cell_23_5 = CAPICPDK.placeCell_Crossing().put('north', cell_23_4.pin['south'])
        cell_23_9 = CAPICPDK.placeCell_Crossing().put('north', cell_23_8.pin['south'])
        cell_23_10 = CAPICPDK.placeCell_Crossing().put('north', cell_23_9.pin['south'])
        cell_20_0 = CAPICPDK.placeCell_Crossing().put((20+0)*CAPICPDK._CellSize,(0+0)*CAPICPDK._CellSize,0)
        cell_20_1 = CAPICPDK.placeCell_Crossing().put('north', cell_20_0.pin['south'])
    return fullLayoutInner

nd.print_warning = False
nd.export_gds(topcells=FullDesign("Akhetonics_ConnectAPIC"), filename="TestPDK.py")
